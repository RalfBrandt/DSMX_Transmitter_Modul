//*****************************************************************************
//*****************************************************************************
//  FILENAME: Counter8_1.h
//   Version: 2.60, Updated on 2015/3/4 at 22:23:47
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: Counter8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Counter8_1_INCLUDE
#define Counter8_1_INCLUDE

#include <m8c.h>

#pragma fastcall16 Counter8_1_EnableInt
#pragma fastcall16 Counter8_1_DisableInt
#pragma fastcall16 Counter8_1_Start
#pragma fastcall16 Counter8_1_Stop
#pragma fastcall16 Counter8_1_bReadCounter              // Read  DR0
#pragma fastcall16 Counter8_1_WritePeriod               // Write DR1
#pragma fastcall16 Counter8_1_bReadCompareValue         // Read  DR2
#pragma fastcall16 Counter8_1_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bCounter8_1_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bCounter8_1_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Counter8_1 API.
//-------------------------------------------------

extern void Counter8_1_EnableInt(void);                           // Proxy Class 1
extern void Counter8_1_DisableInt(void);                          // Proxy Class 1
extern void Counter8_1_Start(void);                               // Proxy Class 1
extern void Counter8_1_Stop(void);                                // Proxy Class 1
extern BYTE Counter8_1_bReadCounter(void);                        // Proxy Class 1
extern void Counter8_1_WritePeriod(BYTE bPeriod);                 // Proxy Class 1
extern BYTE Counter8_1_bReadCompareValue(void);                   // Proxy Class 2
extern void Counter8_1_WriteCompareValue(BYTE bCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bCounter8_1_ReadCounter(void);            // Deprecated
extern BYTE bCounter8_1_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for Counter8_1 API's.
//--------------------------------------------------

#define Counter8_1_CONTROL_REG_START_BIT       ( 0x01 )
#define Counter8_1_INT_REG_ADDR                ( 0x0e1 )
#define Counter8_1_INT_MASK                    ( 0x02 )


//--------------------------------------------------
// Constants for Counter8_1 user defined values
//--------------------------------------------------

#define Counter8_1_PERIOD                      ( 0x16 )
#define Counter8_1_COMPARE_VALUE               ( 0x0b )


//-------------------------------------------------
// Register Addresses for Counter8_1
//-------------------------------------------------

#pragma ioport  Counter8_1_COUNTER_REG: 0x024              //DR0 Count register
BYTE            Counter8_1_COUNTER_REG;
#pragma ioport  Counter8_1_PERIOD_REG:  0x025              //DR1 Period register
BYTE            Counter8_1_PERIOD_REG;
#pragma ioport  Counter8_1_COMPARE_REG: 0x026              //DR2 Compare register
BYTE            Counter8_1_COMPARE_REG;
#pragma ioport  Counter8_1_CONTROL_REG: 0x027              //Control register
BYTE            Counter8_1_CONTROL_REG;
#pragma ioport  Counter8_1_FUNC_REG:    0x124              //Function register
BYTE            Counter8_1_FUNC_REG;
#pragma ioport  Counter8_1_INPUT_REG:   0x125              //Input register
BYTE            Counter8_1_INPUT_REG;
#pragma ioport  Counter8_1_OUTPUT_REG:  0x126              //Output register
BYTE            Counter8_1_OUTPUT_REG;
#pragma ioport  Counter8_1_INT_REG:       0x0e1            //Interrupt Mask Register
BYTE            Counter8_1_INT_REG;


//-------------------------------------------------
// Counter8_1 Macro 'Functions'
//-------------------------------------------------

#define Counter8_1_Start_M \
   Counter8_1_CONTROL_REG |=  Counter8_1_CONTROL_REG_START_BIT

#define Counter8_1_Stop_M  \
   Counter8_1_CONTROL_REG &= ~Counter8_1_CONTROL_REG_START_BIT

#define Counter8_1_EnableInt_M   \
   M8C_EnableIntMask(Counter8_1_INT_REG, Counter8_1_INT_MASK)

#define Counter8_1_DisableInt_M  \
   M8C_DisableIntMask(Counter8_1_INT_REG, Counter8_1_INT_MASK)

#endif
// end of file Counter8_1.h
