                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\Ralf\DOCUME~1\DSM_SA~1\DSM_SA~1\DSM_SA~1\main.c
 0000                   .dbfunc e GetMaxCh _GetMaxCh fc
 0000           ;            max -> X+2
 0000           ;         chanal -> X+1
 0000           ;              n -> X+0
 0000           ;        max_pos -> X-5
 0000           _GetMaxCh::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3805              add SP,5
 0004                   .dbline 27
 0004           ; //----------------------------------------------------------------------------
 0004           ; // C main line
 0004           ; //----------------------------------------------------------------------------
 0004           ; 
 0004           ; //98000BFE295413FE26A81BFE0154 //DSMX
 0004           ; 
 0004           ; //900005FF14AA09FF13540DFF00AA   //DSM2
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; #include "serial.h"
 0004           ; #include "timer.h"
 0004           ; #include "CYRF6936.h"
 0004           ; #include "DSM.h"
 0004           ; #include "config.h"
 0004           ; 
 0004           ; //global data
 0004           ; BOOL HighRes; //true if incomming data is 11Bit
 0004           ; BOOL New_Ser_Data; //true if a new serial package is recived
 0004           ; BOOL ADD_CH_Map;      //true if channel nomber in serial stream are missing
 0004           ; WORD Ch_Data[6];  //channel data is alwasy 11Bit resolution
 0004           ; BYTE ModellNr;        //modell number from serial stream
 0004           ; 
 0004           ; 
 0004           ; //get the biggest channel number in data package
 0004           ; BYTE GetMaxCh(BYTE *max_pos)
 0004           ; {
 0004                   .dbline 30
 0004           ;       BYTE n;
 0004           ;       BYTE chanal;
 0004           ;       BYTE max=0;
 0004 560200            mov [X+2],0
 0007                   .dbline 31
 0007           ;       for (n=0;n<6;n++)
 0007 560000            mov [X+0],0
 000A 8057              xjmp L15
 000C           L12:
 000C                   .dbline 32
 000C           ;       {
 000C                   .dbline 33
 000C           ;               chanal=(ser_databuf[n*2+2]>>(HighRes?3:2))&0xF;
 000C 3C0400            cmp [_HighRes],0
 000F A009              jz L18
 0011 560403            mov [X+4],3
 0014 560300            mov [X+3],0
 0017 8007              xjmp L19
 0019           L18:
 0019 560402            mov [X+4],2
 001C 560300            mov [X+3],0
 001F           L19:
 001F 5200              mov A,[X+0]
 0021 64                asl A
 0022 0102              add A,<_ser_databuf+2
 0024 5300              mov [__r1],A
 0026 3E00              mvi A,[__r1]
 0028 5300              mov [__r1],A
 002A 550000            mov [__r0],0
 002D 5204              mov A,[X+4]
 002F 210F              and A,15
 0031 A008              jz X0
 0033           X1:
 0033 6800              asr [__r0]
 0035 6E00              rrc [__r1]
 0037 78                dec A
 0038 BFFA              jnz X1
 003A           X0:
 003A 26000F            and [__r1],15
 003D 5100              mov A,[__r1]
 003F 5401              mov [X+1],A
 0041                   .dbline 34
 0041           ;               if(ser_databuf[n*2+2]!=0xFF  && chanal>max)
 0041 5200              mov A,[X+0]
 0043 64                asl A
 0044 0102              add A,<_ser_databuf+2
 0046 5300              mov [__r1],A
 0048 3E00              mvi A,[__r1]
 004A 39FF              cmp A,-1
 004C A013              jz L20
 004E 5202              mov A,[X+2]
 0050 3B01              cmp A,[X+1]
 0052 D00D              jnc L20
 0054           X2:
 0054                   .dbline 36
 0054           ;               {
 0054           ;                       *max_pos=n;
 0054                   .dbline 36
 0054 52FC              mov A,[X-4]
 0056 5300              mov [__r1],A
 0058 5200              mov A,[X+0]
 005A 3F00              mvi [__r1],A
 005C                   .dbline 37
 005C           ;                       max=chanal;
 005C 5201              mov A,[X+1]
 005E 5402              mov [X+2],A
 0060                   .dbline 38
 0060           ;               }
 0060           L20:
 0060                   .dbline 39
 0060           ;       }               
 0060           L13:
 0060                   .dbline 31
 0060 7700              inc [X+0]
 0062           L15:
 0062                   .dbline 31
 0062 3D0006            cmp [X+0],6
 0065 CFA6              jc L12
 0067           X3:
 0067                   .dbline 40
 0067           ; return max;
 0067 5202              mov A,[X+2]
 0069                   .dbline -2
 0069           L11:
 0069 38FB              add SP,-5
 006B 20                pop X
 006C                   .dbline 0 ; func end
 006C 7F                ret
 006D                   .dbsym l max 2 c
 006D                   .dbsym l chanal 1 c
 006D                   .dbsym l n 0 c
 006D                   .dbsym l max_pos -5 pc
 006D                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile C:\Users\Ralf\DOCUME~1\DSM_SA~1\DSM_SA~1\DSM_SA~1\main.c
 0000           L24:
 0000                   .blkb 1
                        .area text(rom, con, rel)
 006D                   .dbfile C:\Users\Ralf\DOCUME~1\DSM_SA~1\DSM_SA~1\DSM_SA~1\main.c
 006D                   .dbfunc e Ser_cb _Ser_cb fV
 006D                   .dbsym s n L24 c
 006D           _Ser_cb::
 006D                   .dbline -1
 006D                   .dbline 45
 006D           ; }
 006D           ; 
 006D           ; //called from  serial if a full package is recived
 006D           ; void Ser_cb(void)
 006D           ; {
 006D                   .dbline 46
 006D           ;       SER_RESET()
 006D                   .dbline 46
 006D                   .dbline 46
 006D 550000            mov [_ser_status],0
 0070                   .dbline 46
 0070                   .dbline 46
 0070                   .dbline 46
 0070                   .dbline 46
 0070 550000            mov [_ser_idx],0
 0073                   .dbline 46
 0073                   .dbline 46
 0073                   .dbline 46
 0073                   .dbline 50
 0073           ;       //manual inline
 0073           ;       //SetOutData();
 0073           ;       //void SetOutData(void)
 0073           ;       {
 0073                   .dbline 53
 0073           ;               static BYTE n;
 0073           ;               //loop thru the channel data 
 0073           ;               for(n=0;n<6;n++)
 0073 550000            mov [L24],0
 0076 8065              xjmp L28
 0078           L25:
 0078                   .dbline 54
 0078           ;               {
 0078                   .dbline 56
 0078           ;               //Ch_Data is alwasy 11Bit so if incoming data is 10Bit we need to shift up by one bit           
 0078           ;               if(HighRes)
 0078 3C0400            cmp [_HighRes],0
 007B A02B              jz L29
 007D                   .dbline 57
 007D           ;                       Ch_Data[n]=((ser_databuf[n*2+2]<<8)|ser_databuf[n*2+3]);
 007D 5F0000            mov [__r1],[L24]
 0080 550000            mov [__r0],0
 0083 6500              asl [__r1]
 0085 6B00              rlc [__r0]
 0087 5100              mov A,[__r1]
 0089 0103              add A,<_ser_databuf+3
 008B 5300              mov [__r3],A
 008D 3E00              mvi A,[__r3]
 008F 5300              mov [__r2],A
 0091 5100              mov A,[__r1]
 0093 0102              add A,<_ser_databuf+2
 0095 5300              mov [__r5],A
 0097 3E00              mvi A,[__r5]
 0099 060005            add [__r1],<_Ch_Data
 009C 0E0005            adc [__r0],>_Ch_Data
 009F 3F00              mvi [__r1],A
 00A1 5100              mov A,[__r2]
 00A3 3F00              mvi [__r1],A
 00A5 8034              xjmp L30
 00A7           L29:
 00A7                   .dbline 59
 00A7           ;               else
 00A7           ;                       Ch_Data[n]=((ser_databuf[n*2+2]<<8)|ser_databuf[n*2+3])<<1;
 00A7 5F0000            mov [__r1],[L24]
 00AA 550000            mov [__r0],0
 00AD 6500              asl [__r1]
 00AF 6B00              rlc [__r0]
 00B1 5100              mov A,[__r1]
 00B3 0103              add A,<_ser_databuf+3
 00B5 5300              mov [__r3],A
 00B7 3E00              mvi A,[__r3]
 00B9 5300              mov [__r2],A
 00BB 5100              mov A,[__r1]
 00BD 0102              add A,<_ser_databuf+2
 00BF 5300              mov [__r5],A
 00C1 3E00              mvi A,[__r5]
 00C3 5F0000            mov [__r3],[__r2]
 00C6 5300              mov [__r2],A
 00C8 6500              asl [__r3]
 00CA 6B00              rlc [__r2]
 00CC 060005            add [__r1],<_Ch_Data
 00CF 0E0005            adc [__r0],>_Ch_Data
 00D2 5100              mov A,[__r2]
 00D4 3F00              mvi [__r1],A
 00D6 5100              mov A,[__r3]
 00D8 3F00              mvi [__r1],A
 00DA           L30:
 00DA                   .dbline 60
 00DA           ;               }
 00DA           L26:
 00DA                   .dbline 53
 00DA 7600              inc [L24]
 00DC           L28:
 00DC                   .dbline 53
 00DC 3C0006            cmp [L24],6
 00DF CF98              jc L25
 00E1           X4:
 00E1                   .dbline 61
 00E1           ;               if(ADD_CH_Map)
 00E1 3C0200            cmp [_ADD_CH_Map],0
 00E4 A030              jz L35
 00E6                   .dbline 62
 00E6           ;                       Ch_Data[n]|=(n<<11);
 00E6 5F0000            mov [__r1],[L24]
 00E9 6500              asl [__r1]
 00EB 060005            add [__r1],<_Ch_Data
 00EE 5F0000            mov [__r2],[L24]
 00F1 550000            mov [__r3],0
 00F4 6500              asl [__r2]
 00F6 6500              asl [__r3]
 00F8 6B00              rlc [__r2]
 00FA 6500              asl [__r3]
 00FC 6B00              rlc [__r2]
 00FE 3E00              mvi A,[__r1]
 0100 5300              mov [__r4],A
 0102 3E00              mvi A,[__r1]
 0104 160002            sub [__r1],2
 0107 2A00              or A,[__r3]
 0109 5300              mov [__r3],A
 010B 5100              mov A,[__r4]
 010D 2A00              or A,[__r2]
 010F 3F00              mvi [__r1],A
 0111 5100              mov A,[__r3]
 0113 3F00              mvi [__r1],A
 0115           L35:
 0115                   .dbline 63
 0115           ;       }
 0115                   .dbline 64
 0115           ;       New_Ser_Data=TRUE;
 0115 550301            mov [_New_Ser_Data],1
 0118                   .dbline -2
 0118           L23:
 0118                   .dbline 0 ; func end
 0118 7F                ret
 0119                   .dbend
 0119                   .dbfunc e main _main fV
 0119           ;       max_pos2 -> X+4
 0119           ;        max_pos -> X+3
 0119           ;           max2 -> X+2
 0119           ;         Max_Ch -> X+1
 0119           ;            max -> X+4
 0119           ;            min -> X+3
 0119           ;              n -> X+2
 0119           ;         chanal -> X+1
 0119           ;         config -> X+0
 0119           _main::
 0119                   .dbline -1
 0119 10                push X
 011A 4F                mov X,SP
 011B 3809              add SP,9
 011D                   .dbline 68
 011D           ; }
 011D           ; 
 011D           ; void main(void)
 011D           ; {
 011D                   .dbline 72
 011D           ;       BYTE config;                            //configuration
 011D           ; 
 011D           ;       //initialize everiting
 011D           ;       M8C_EnableGInt;                         // Enable Global Interrupts
 011D 7101                      or  F, 01h
 011F           
 011F                   .dbline 76
 011F           ; #ifdef DEBUG
 011F           ;       TX8SW_1_Start();
 011F           ; #endif
 011F           ;       SerialRX_Init();
 011F 7C0000            xcall _SerialRX_Init
 0122                   .dbline 77
 0122           ;       Timer_init();
 0122 7C0000            xcall _Timer_init
 0125                   .dbline 81
 0125           ; #ifdef DEBUG
 0125           ;       TX8SW_1_CPutString("Hello");
 0125           ; #endif
 0125           ;       LED_1_Start();
 0125 10                push X
 0126 7C0000            xcall _LED_1_Start
 0129 20                pop X
 012A                   .dbline 82
 012A           ;       DSM_Init();
 012A 7C0000            xcall _DSM_Init
 012D                   .dbline 84
 012D           ; #ifndef DEBUG
 012D           ;       E2PROM_1_Start();
 012D 10                push X
 012E 7C0000            xcall _E2PROM_1_Start
 0131 20                pop X
 0132                   .dbline 86
 0132           ; #endif
 0132           ;       New_Ser_Data=FALSE;
 0132 550300            mov [_New_Ser_Data],0
 0135                   .dbline 87
 0135           ;       SerialSetCallback(Ser_cb);
 0135 5000              mov A,>PL_Ser_cb
 0137 08                push A
 0138 5000              mov A,<PL_Ser_cb
 013A 08                push A
 013B 7C0000            xcall _SerialSetCallback
 013E 38FE              add SP,-2
 0140           L38:
 0140                   .dbline 93
 0140           ; #ifdef DEBUG
 0140           ;       //DIAG_OUT1_Start();
 0140           ; #endif
 0140           ; 
 0140           ;       //wait for serial data
 0140           ;       while(!New_Ser_Data);
 0140           L39:
 0140                   .dbline 93
 0140 3C0300            cmp [_New_Ser_Data],0
 0143 AFFC              jz L38
 0145                   .dbline 94
 0145           ;       New_Ser_Data=FALSE;
 0145 550300            mov [_New_Ser_Data],0
 0148                   .dbline 100
 0148           ;       //check format of serial data, do we have 10bit or 11Bit data
 0148           ;       
 0148           ;       //manual inline
 0148           ;       //DeterminBitCount();
 0148           ;       //void DeterminBitCount(void)
 0148           ;       {
 0148                   .dbline 103
 0148           ;               BYTE chanal;
 0148           ;               BYTE n;
 0148           ;               BYTE min=0xff;
 0148 5603FF            mov [X+3],-1
 014B                   .dbline 104
 014B           ;               BYTE max=0;
 014B 560400            mov [X+4],0
 014E                   .dbline 107
 014E           ; 
 014E           ;               //try 11 Bits
 014E           ;               for (n=0;n<6;n++)
 014E 560200            mov [X+2],0
 0151 8039              xjmp L44
 0153           L41:
 0153                   .dbline 108
 0153           ;               {
 0153                   .dbline 109
 0153           ;                       chanal=(ser_databuf[n*2+2]>>3)&0xF;
 0153 5202              mov A,[X+2]
 0155 64                asl A
 0156 0102              add A,<_ser_databuf+2
 0158 5300              mov [__r1],A
 015A 3E00              mvi A,[__r1]
 015C 67                asr A
 015D 67                asr A
 015E 67                asr A
 015F 210F              and A,15
 0161 5401              mov [X+1],A
 0163                   .dbline 110
 0163           ;                       if (chanal&&chanal<min)
 0163 3D0100            cmp [X+1],0
 0166 A00B              jz L46
 0168 5201              mov A,[X+1]
 016A 3B03              cmp A,[X+3]
 016C D005              jnc L46
 016E           X6:
 016E                   .dbline 111
 016E           ;                               min=chanal;
 016E 5201              mov A,[X+1]
 0170 5403              mov [X+3],A
 0172           L46:
 0172                   .dbline 112
 0172           ;                       if(ser_databuf[n*2+2]!=0xFF  && chanal>max)
 0172 5202              mov A,[X+2]
 0174 64                asl A
 0175 0102              add A,<_ser_databuf+2
 0177 5300              mov [__r1],A
 0179 3E00              mvi A,[__r1]
 017B 39FF              cmp A,-1
 017D A00B              jz L48
 017F 5204              mov A,[X+4]
 0181 3B01              cmp A,[X+1]
 0183 D005              jnc L48
 0185           X7:
 0185                   .dbline 113
 0185           ;                               max=chanal;
 0185 5201              mov A,[X+1]
 0187 5404              mov [X+4],A
 0189           L48:
 0189                   .dbline 114
 0189           ;               }               
 0189           L42:
 0189                   .dbline 107
 0189 7702              inc [X+2]
 018B           L44:
 018B                   .dbline 107
 018B 3D0206            cmp [X+2],6
 018E CFC4              jc L41
 0190           X8:
 0190                   .dbline 115
 0190           ;               if ((max-min)>=4)
 0190 5204              mov A,[X+4]
 0192 1303              sub A,[X+3]
 0194 3904              cmp A,4
 0196 C006              jc L51
 0198           X9:
 0198                   .dbline 116
 0198           ;                       HighRes=TRUE;
 0198 550401            mov [_HighRes],1
 019B 8004              xjmp L52
 019D           L51:
 019D                   .dbline 118
 019D           ;               else 
 019D           ;                       HighRes=FALSE;
 019D 550400            mov [_HighRes],0
 01A0           L52:
 01A0                   .dbline 119
 01A0           ;       }
 01A0                   .dbline 122
 01A0           ;       //get model number from serail stream
 01A0           ;       //range is from 0 to 15
 01A0           ;       ModellNr=ser_databuf[1];
 01A0 5F0101            mov [_ModellNr],[_ser_databuf+1]
 01A3                   .dbline 125
 01A3           ;       
 01A3           ;       
 01A3           ;       DSM_SetRangeCheck(ser_databuf[0]&SPTX_RANGE_CHECK);
 01A3 5100              mov A,[_ser_databuf]
 01A5 2120              and A,32
 01A7 08                push A
 01A8 7C0000            xcall _DSM_SetRangeCheck
 01AB                   .dbline 131
 01AB           ; 
 01AB           ;       
 01AB           ;       //manual inline
 01AB           ;       //Determin_Mode();
 01AB           ;       //void Determin_Mode(void)
 01AB           ;       {
 01AB                   .dbline 137
 01AB           ;               BYTE max2;
 01AB           ;               BYTE max_pos;
 01AB           ;               BYTE max_pos2;
 01AB           ; 
 01AB           ;               //get highest channel found in data stream
 01AB           ;               BYTE Max_Ch=GetMaxCh(&max_pos);
 01AB 5A00              mov [__r1],X
 01AD 060003            add [__r1],3
 01B0 5100              mov A,[__r0]
 01B2 08                push A
 01B3 5100              mov A,[__r1]
 01B5 08                push A
 01B6 9E48              xcall _GetMaxCh
 01B8 38FD              add SP,-3
 01BA 5401              mov [X+1],A
 01BC           L54:
 01BC                   .dbline 139
 01BC           ;               //wait for next serial data
 01BC           ;               while(!New_Ser_Data);
 01BC           L55:
 01BC                   .dbline 139
 01BC 3C0300            cmp [_New_Ser_Data],0
 01BF AFFC              jz L54
 01C1                   .dbline 141
 01C1           ;               //get highest channel found in data stream
 01C1           ;               max2=GetMaxCh(&max_pos2);
 01C1 5A00              mov [__r1],X
 01C3 060004            add [__r1],4
 01C6 5100              mov A,[__r0]
 01C8 08                push A
 01C9 5100              mov A,[__r1]
 01CB 08                push A
 01CC 9E32              xcall _GetMaxCh
 01CE 38FE              add SP,-2
 01D0 5402              mov [X+2],A
 01D2                   .dbline 143
 01D2           ;               //if they are different we have more that 6 channel 
 01D2           ;               if(max2!=Max_Ch && Max_Ch && max2)
 01D2 5202              mov A,[X+2]
 01D4 3B01              cmp A,[X+1]
 01D6 A00E              jz L57
 01D8 3D0100            cmp [X+1],0
 01DB A009              jz L57
 01DD 3D0200            cmp [X+2],0
 01E0 A004              jz L57
 01E2                   .dbline 144
 01E2           ;                       DSM_Is_11ms=TRUE;
 01E2 550001            mov [_DSM_Is_11ms],1
 01E5           L57:
 01E5                   .dbline 147
 01E5           ; 
 01E5           ;               //update max    
 01E5           ;               if(max2>Max_Ch)
 01E5 5201              mov A,[X+1]
 01E7 3B02              cmp A,[X+2]
 01E9 D009              jnc L59
 01EB           X10:
 01EB                   .dbline 149
 01EB           ;                       {
 01EB           ;                       Max_Ch=max2;
 01EB                   .dbline 149
 01EB 5202              mov A,[X+2]
 01ED 5401              mov [X+1],A
 01EF                   .dbline 150
 01EF           ;                       max_pos=max_pos2;
 01EF 5204              mov A,[X+4]
 01F1 5403              mov [X+3],A
 01F3                   .dbline 151
 01F3           ;                       }
 01F3           L59:
 01F3                   .dbline 153
 01F3           ;               //if channel numbers are missing in data stream we need to add them
 01F3           ;               if(!Max_Ch)
 01F3 3D0100            cmp [X+1],0
 01F6 B004              jnz L61
 01F8                   .dbline 154
 01F8           ;                       ADD_CH_Map=TRUE;
 01F8 550201            mov [_ADD_CH_Map],1
 01FB           L61:
 01FB                   .dbline 157
 01FB           ; 
 01FB           ;               //determin Mode
 01FB           ;               DSM_Is_DSMX=((ser_databuf[0]&SPTX_DSMX_MODE)==SPTX_DSMX_MODE);
 01FB 5100              mov A,[_ser_databuf]
 01FD 2108              and A,8
 01FF 3908              cmp A,8
 0201 B009              jnz L64
 0203 560601            mov [X+6],1
 0206 560500            mov [X+5],0
 0209 8007              xjmp L65
 020B           L64:
 020B 560600            mov [X+6],0
 020E 560500            mov [X+5],0
 0211           L65:
 0211 5206              mov A,[X+6]
 0213 5300              mov [_DSM_Is_DSMX],A
 0215                   .dbline 158
 0215           ;               DSM_Is_Forced=!((ser_databuf[0]&SPTX_NORM_MODE)==SPTX_NORM_MODE);
 0215 5100              mov A,[_ser_databuf]
 0217 2110              and A,16
 0219 3910              cmp A,16
 021B A009              jz L67
 021D 560801            mov [X+8],1
 0220 560700            mov [X+7],0
 0223 8007              xjmp L68
 0225           L67:
 0225 560800            mov [X+8],0
 0228 560700            mov [X+7],0
 022B           L68:
 022B 5208              mov A,[X+8]
 022D 5300              mov [_DSM_Is_Forced],A
 022F                   .dbline 161
 022F           ;       
 022F           ;               //DSMX is always 11Bit
 022F           ;               if(DSM_Is_DSMX || HighRes)
 022F 3C0000            cmp [_DSM_Is_DSMX],0
 0232 B006              jnz L71
 0234 3C0400            cmp [_HighRes],0
 0237 A004              jz L69
 0239           L71:
 0239                   .dbline 162
 0239           ;                       DSM_Is_11Bit=TRUE;
 0239 550001            mov [_DSM_Is_11Bit],1
 023C           L69:
 023C                   .dbline 165
 023C           ; 
 023C           ;               //update channel number send out while bind 
 023C           ;               if(Max_Ch>5)
 023C 5005              mov A,5
 023E 3B01              cmp A,[X+1]
 0240 D007              jnc L72
 0242           X11:
 0242                   .dbline 166
 0242           ;                       num_channels=Max_Ch+1;
 0242 5201              mov A,[X+1]
 0244 0101              add A,1
 0246 5300              mov [_num_channels],A
 0248           L72:
 0248                   .dbline 167
 0248           ;               dsm_Max_pos=max_pos;
 0248 5203              mov A,[X+3]
 024A 5300              mov [_dsm_Max_pos],A
 024C                   .dbline 179
 024C           ;                       
 024C           ; #ifdef DEBUG
 024C           ;               TX8SW_1_CPutString(" C:");
 024C           ;               TX8SW_1_PutSHexByte(DSM_Is_DSMX);
 024C           ;               TX8SW_1_PutSHexByte(DSM_Is_11Bit);
 024C           ;               TX8SW_1_PutSHexByte(DSM_Is_11ms);
 024C           ;               TX8SW_1_PutSHexByte(HighRes);
 024C           ;               TX8SW_1_PutSHexByte(ADD_CH_Map);
 024C           ;               TX8SW_1_PutSHexByte(Max_Ch);
 024C           ;               TX8SW_1_PutSHexByte(dsm_Max_pos);
 024C           ; #endif
 024C           ;       }
 024C                   .dbline 181
 024C           ;       
 024C           ;       if(ser_databuf[0]&SPTX_BIND_MODE)
 024C 470080            tst [_ser_databuf],-128
 024F A061              jz L74
 0251                   .dbline 186
 0251           ;       {
 0251           ; #ifdef DEBUG
 0251           ;               TX8SW_1_CPutString("BIND ");
 0251           ; #endif
 0251           ;               DSM_initialize_bind();
 0251                   .dbline 186
 0251 7C0000            xcall _DSM_initialize_bind
 0254           L76:
 0254                   .dbline 188
 0254           ;               do
 0254           ;                       {
 0254                   .dbline 189
 0254           ;                       DSM_Cyclic();
 0254 7C0000            xcall _DSM_Cyclic
 0257                   .dbline 190
 0257           ;                       }
 0257           L77:
 0257                   .dbline 192
 0257           ;               //wait till binding is done
 0257           ;               while(!DSM_BIND_DONE());
 0257 3C0000            cmp [_Bind_cnt],0
 025A BFF9              jnz L76
 025C                   .dbline 194
 025C           ;               
 025C           ;               New_Ser_Data=FALSE;
 025C 550300            mov [_New_Ser_Data],0
 025F                   .dbline 197
 025F           ;               
 025F           ;               //save configuration to FLASH
 025F           ;               config=(DSM_Is_11Bit?OPTION_11BIT:0)|(DSM_Is_11ms?OPTION_11MS:0)|(DSM_Is_DSMX?OPTION_DSMX:0);
 025F 3C0000            cmp [_DSM_Is_11Bit],0
 0262 A009              jz L82
 0264 560204            mov [X+2],4
 0267 560100            mov [X+1],0
 026A 8007              xjmp L83
 026C           L82:
 026C 560200            mov [X+2],0
 026F 560100            mov [X+1],0
 0272           L83:
 0272 3C0000            cmp [_DSM_Is_11ms],0
 0275 A009              jz L84
 0277 560402            mov [X+4],2
 027A 560300            mov [X+3],0
 027D 8007              xjmp L85
 027F           L84:
 027F 560400            mov [X+4],0
 0282 560300            mov [X+3],0
 0285           L85:
 0285 3C0000            cmp [_DSM_Is_DSMX],0
 0288 A009              jz L86
 028A 560601            mov [X+6],1
 028D 560500            mov [X+5],0
 0290 8007              xjmp L87
 0292           L86:
 0292 560600            mov [X+6],0
 0295 560500            mov [X+5],0
 0298           L87:
 0298 5202              mov A,[X+2]
 029A 2B04              or A,[X+4]
 029C 5300              mov [__r1],A
 029E 5206              mov A,[X+6]
 02A0 2C00              or [__r1],A
 02A2 5100              mov A,[__r1]
 02A4 5400              mov [X+0],A
 02A6                   .dbline 202
 02A6           ; #ifdef DEBUG
 02A6           ;               TX8SW_1_PutSHexByte(config);
 02A6           ;               TX8SW_1_CPutString("SAVE ");
 02A6           ; #endif
 02A6           ;               SaveConfig(config,ModellNr);
 02A6 5101              mov A,[_ModellNr]
 02A8 08                push A
 02A9 5200              mov A,[X+0]
 02AB 08                push A
 02AC 7C0000            xcall _SaveConfig
 02AF 38FE              add SP,-2
 02B1                   .dbline 203
 02B1           ;       }
 02B1           L74:
 02B1                   .dbline 208
 02B1           ; //read config from flash
 02B1           ; #ifdef DEBUG
 02B1           ;       config=(DSM_Is_11Bit?OPTION_11BIT:0)|(DSM_Is_11ms?OPTION_11MS:0)|(DSM_Is_DSMX?OPTION_DSMX:0);
 02B1           ; #else
 02B1           ;       config=ReadConfig(ModellNr);
 02B1 5101              mov A,[_ModellNr]
 02B3 08                push A
 02B4 7C0000            xcall _ReadConfig
 02B7 38FF              add SP,-1
 02B9 5400              mov [X+0],A
 02BB                   .dbline 217
 02BB           ; #endif
 02BB           ; 
 02BB           ; #ifdef DEBUG
 02BB           ;       TX8SW_1_CPutString("RUN ");
 02BB           ;       TX8SW_1_PutSHexByte(config);
 02BB           ;       //DIAG_OUT1_Off();
 02BB           ; #endif
 02BB           ;       //determin config based on value from flash
 02BB           ;       DSM_Is_11ms=((config&OPTION_11MS)==OPTION_11MS);
 02BB 5200              mov A,[X+0]
 02BD 2102              and A,2
 02BF 3902              cmp A,2
 02C1 B009              jnz L89
 02C3 560201            mov [X+2],1
 02C6 560100            mov [X+1],0
 02C9 8007              xjmp L90
 02CB           L89:
 02CB 560200            mov [X+2],0
 02CE 560100            mov [X+1],0
 02D1           L90:
 02D1 5202              mov A,[X+2]
 02D3 5300              mov [_DSM_Is_11ms],A
 02D5                   .dbline 218
 02D5           ;       DSM_Is_11Bit=((config&OPTION_11BIT)==OPTION_11BIT);
 02D5 5200              mov A,[X+0]
 02D7 2104              and A,4
 02D9 3904              cmp A,4
 02DB B009              jnz L92
 02DD 560401            mov [X+4],1
 02E0 560300            mov [X+3],0
 02E3 8007              xjmp L93
 02E5           L92:
 02E5 560400            mov [X+4],0
 02E8 560300            mov [X+3],0
 02EB           L93:
 02EB 5204              mov A,[X+4]
 02ED 5300              mov [_DSM_Is_11Bit],A
 02EF                   .dbline 219
 02EF           ;       DSM_Is_DSMX=((config&OPTION_DSMX)==OPTION_DSMX);
 02EF 5200              mov A,[X+0]
 02F1 2101              and A,1
 02F3 3901              cmp A,1
 02F5 B009              jnz L95
 02F7 560601            mov [X+6],1
 02FA 560500            mov [X+5],0
 02FD 8007              xjmp L96
 02FF           L95:
 02FF 560600            mov [X+6],0
 0302 560500            mov [X+5],0
 0305           L96:
 0305 5206              mov A,[X+6]
 0307 5300              mov [_DSM_Is_DSMX],A
 0309                   .dbline 221
 0309           ;       //prepare transmitting
 0309           ;       DSM_LoadTransmitMode();
 0309 7C0000            xcall _DSM_LoadTransmitMode
 030C                   .dbline 222
 030C           ;       New_Ser_Data=FALSE;
 030C 550300            mov [_New_Ser_Data],0
 030F 801E              xjmp L98
 0311           L97:
 0311                   .dbline 224
 0311           ;       while (1)
 0311           ;       {
 0311                   .dbline 225
 0311           ;       DSM_Cyclic();
 0311 7C0000            xcall _DSM_Cyclic
 0314                   .dbline 227
 0314           ; 
 0314           ;       if(New_Ser_Data)
 0314 3C0300            cmp [_New_Ser_Data],0
 0317 A016              jz L100
 0319                   .dbline 229
 0319           ;               {
 0319           ;               New_Ser_Data=FALSE;
 0319                   .dbline 229
 0319 550300            mov [_New_Ser_Data],0
 031C                   .dbline 231
 031C           ;               
 031C           ;               DSM_NewSerialData();
 031C 7C0000            xcall _DSM_NewSerialData
 031F                   .dbline 234
 031F           ;       
 031F           ;               //update TX power
 031F           ;               DSM_SetRangeCheck(ser_databuf[0]&SPTX_RANGE_CHECK);
 031F 5100              mov A,[_ser_databuf]
 0321 2120              and A,32
 0323 08                push A
 0324 7C0000            xcall _DSM_SetRangeCheck
 0327 38FF              add SP,-1
 0329                   .dbline 236
 0329           ; 
 0329           ;               LED_1_Invert(); 
 0329 10                push X
 032A 7C0000            xcall _LED_1_Invert
 032D 20                pop X
 032E                   .dbline 237
 032E           ;               }
 032E           L100:
 032E                   .dbline 238
 032E           ;       }
 032E           L98:
 032E                   .dbline 223
 032E 8FE2              xjmp L97
 0330           X5:
 0330                   .dbline -2
 0330           L37:
 0330 38F7              add SP,-9
 0332 20                pop X
 0333                   .dbline 0 ; func end
 0333 8FFF              jmp .
 0335                   .dbsym l max_pos2 4 c
 0335                   .dbsym l max_pos 3 c
 0335                   .dbsym l max2 2 c
 0335                   .dbsym l Max_Ch 1 c
 0335                   .dbsym l max 4 c
 0335                   .dbsym l min 3 c
 0335                   .dbsym l n 2 c
 0335                   .dbsym l chanal 1 c
 0335                   .dbsym l config 0 c
 0335                   .dbend
                        .area bss(ram, con, rel)
 0001                   .dbfile C:\Users\Ralf\DOCUME~1\DSM_SA~1\DSM_SA~1\DSM_SA~1\main.c
 0001           _ModellNr::
 0001                   .blkb 1
 0002                   .dbsym e ModellNr _ModellNr c
 0002           _ADD_CH_Map::
 0002                   .blkb 1
 0003                   .dbsym e ADD_CH_Map _ADD_CH_Map c
 0003           _New_Ser_Data::
 0003                   .blkb 1
 0004                   .dbsym e New_Ser_Data _New_Ser_Data c
 0004           _HighRes::
 0004                   .blkb 1
 0005                   .dbsym e HighRes _HighRes c
 0005           _Ch_Data::
 0005                   .blkb 12
 0011                   .dbsym e Ch_Data _Ch_Data A[12:6]i
                        .area func_lit(rom, con, rel, proclab)
 0000 006D      PL_Ser_cb:      .word _Ser_cb
